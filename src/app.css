@tailwind base;

:root {
	/* User-defined constants */
	/* Add any custom color constants here like specific brand colors to be used in the Semantic Colors section */

	/* Branding Standards */
	--ehi-bs-black: #262626;
	--ehi-bs-neutral-100: #595959;
	--ehi-bs-neutral-80: #8c8c8c;
	--ehi-bs-neutral-60: #dedede;
	--ehi-bs-neutral-40: #eceded;
	--ehi-bs-neutral-20: #f4f4f4;
	--ehi-bs-navy-100: #003270;
	--ehi-bs-navy-80: #005395;
	--ehi-bs-blue-100: #0073ba;
	--ehi-bs-blue-20: #e5eaf6;
	--ehi-bs-blue-10: #eef1f9;
	--ehi-bs-gold-100: #f4af23;
	--ehi-bs-mint-100: #addc91;
	--ehi-bs-mint-20: #ebf5e6;
	--ehi-bs-mint-10: #f5faf2;
	--ehi-bs-turquoise-100: #00a5ab;
	--ehi-bs-turquoise-10: #eaf6f5;
	--ehi-bs-orange-100: #f76736;
	--ehi-bs-danger: #dc3545;
	--ehi-bs-success: #198754;

	--ehi-bars: #bbbbbb;
	--ehi-inactive: #949494;
	--ehi-lines: #707070;
	/* END Branding Standards */

	/* END Color constants */

	/* Declare theme customization variables */
	--black: var(--ehi-bs-black);
	/* --white: #ffffff; */

	/* Semantic Colors */
	/* Only uncomment the colors you want to override */

	/* Default color for font, background, borders, etc. */
	/* --color-base: var(--black); */
	/* --color-base-hover: #555; */
	/* --color-on-base-hover: color-mix(in srgb, var(--color-base), var(--_white) 95%); */

	--color-primary: var(--ehi-bs-blue-100);
	--color-primary-hover: var(--ehi-bs-navy-80);
	/* --color-on-primary-hover: color-mix(in srgb, var(--color-primary), var(--_white) 95%); */

	--color-secondary: var(--ehi-bs-gold-100);
	--color-secondary-hover: color-mix(in srgb, var(--color-secondary) 80%, var(--_white));
	/* --color-on-secondary-hover: color-mix(in srgb, var(--color-secondary), var(--_white) 75%); */

	--color-danger: var(--ehi-bs-danger);
	--color-danger-hover: color-mix(in srgb, var(--ehi-bs-danger) 80%, var(--_black));
	/* --color-on-danger-hover: color-mix(in srgb, var(--color-danger), var(--_white) 95%); */

	--color-success: var(--ehi-bs-success);
	/* --color-success-hover: #00ff00; */
	/* --color-on-success-hover: color-mix(in srgb, var(--color-success), var(--_white) 95%); */

	--color-disabled: var(--ehi-bs-neutral-80);

	--link-color: var(--ehi-bs-blue-100);
	/* --link-color-hover: var(--ehi-blue-500); */

	/* END Semantic Colors */

	/* Component Variables */
	--accordion-border-radius: var(--space-xs, 0px);
	--accordion-border-width: 1px;
	--accordion-label-padding-block: var(--space-md, 1rem);
	--accordion-label-padding-inline: var(--space-md, 1rem);
	--accordion-content-padding-block: var(--space-md, 1rem);
	--accordion-content-padding-inline: var(--space-md, 1rem);

	--button-border-radius: 0.25rem;
	--button-border-width: 2px;
	--button-padding-block: var(--space-sm-relative);
	--button-padding-inline: var(--space-lg-relative);

	/* --card-border-radius: 0px; */
	--card-border-radius: 0.25rem;
	--card-border-width: 2px;
	--card-padding-block: var(--space-md);
	--card-padding-inline: var(--space-md);

	--grid-min-col-width: 20rem;

	/* END Component Variables */

	/* END theme customization variables */

	/* Typography */
	--font-base: 1rem;
	--leading-base: 1.5rem;
	--font-lg: 1.125rem;
	--leading-lg: 1.625rem;
	--font-xl: 1.375rem;
	--leading-xl: 1.875rem;
	--font-2xl: 1.625rem;
	--leading-2xl: 2rem;
	--font-3xl: 2.125rem;
	--leading-3xl: 2.25rem;
	--font-4xl: 3.438rem;
	--leading-4xl: 4.063rem;

	/* Spacing */
	--space-unit: 1rem;
	--space-sm: calc(0.25 * var(--space-unit));
	--space-md: calc(0.5 * var(--space-unit));
	--space-lg: calc(1 * var(--space-unit));
	/* --space-xxs: calc(0.25 * var(--space-unit));
	--space-xs: calc(0.5 * var(--space-unit));
	--space-sm: calc(0.75 * var(--space-unit));
	--space-md: calc(1.25 * var(--space-unit));
	--space-lg: calc(2 * var(--space-unit));
	--space-xl: calc(3.25 * var(--space-unit));
	--space-xxl: calc(5.25 * var(--space-unit)); */

	/* relative values */
	--space-unit-relative: 1em;
	--space-sm-relative: calc(0.25 * var(--space-unit-relative));
	--space-md-relative: calc(0.5 * var(--space-unit-relative));
	--space-lg-relative: calc(1 * var(--space-unit-relative));
	/* --space-xxs-relative: calc(0.25 * var(--space-unit-relative));
	--space-xs-relative: calc(0.5 * var(--space-unit-relative));
	--space-sm-relative: calc(0.75 * var(--space-unit-relative));
	--space-md-relative: calc(1.25 * var(--space-unit-relative));
	--space-lg-relative: calc(2 * var(--space-unit-relative));
	--space-xl-relative: calc(3.25 * var(--space-unit-relative));
	--space-xxl-relative: calc(5.25 * var(--space-unit-relative)); */

	/* Pseudo-private CSS variables. Do not modify as these set defaults and are used in the CSS. */

	--_black: var(--black, #262626);
	--_white: var(--white, #ffffff);

	/* Default color for font, background, borders, etc. */
	--_color-base: var(--color-base, var(--_black));
	--_color-base-hover: var(
		--color-base-hover,
		color-mix(in srgb, var(--_color-base) 80%, var(--_white))
	);
	--_color-on-base-hover: var(
		--color-on-base-hover,
		color-mix(in srgb, var(--_color-base), var(--_white) 95%)
	);

	--_color-primary: var(--color-primary, var(--_color-base));
	--_color-primary-hover: var(
		--color-primary-hover,
		color-mix(in srgb, var(--_color-primary) 90%, var(--_white))
	);
	--_color-on-primary-hover: var(
		--color-on-primary-hover,
		color-mix(in srgb, var(--_color-primary), var(--_white) 95%)
	);

	--_color-secondary: var(--color-secondary, var(--_color-base));
	--_color-secondary-hover: var(
		--color-secondary-hover,
		color-mix(in srgb, var(--_color-secondary) 90%, var(--_white))
	);
	--_color-on-secondary-hover: var(
		--color-on-secondary-hover,
		color-mix(in srgb, var(--_color-secondary), var(--_white) 95%)
	);

	--_color-danger: var(--color-danger, rgb(239, 68, 68));
	--_color-danger-hover: var(
		--color-danger-hover,
		color-mix(in srgb, var(--_color-danger) 80%, var(--_white))
	);
	--_color-on-danger-hover: var(
		--color-on-danger-hover,
		color-mix(in srgb, var(--_color-danger), var(--_white) 95%)
	);

	--_color-success: var(--color-success, rgb(22, 163, 74));
	--_color-success-hover: var(
		--color-success-hover,
		color-mix(in srgb, var(--color-success) 90%, var(--_white))
	);
	--_color-on-success-hover: var(
		--color-on-success-hover,
		color-mix(in srgb, var(--color-success), var(--_white) 95%)
	);

	--_color-disabled: var(--color-disabled, #8c8c8c);

	--_link-color: var(--link-color, rgb(14, 165, 233));
	--_link-color-hover: var(
		--link-color-hover,
		color-mix(in srgb, var(--_link-color) 90%, var(--_white))
	);

	/* Defaults */
	@property --_color-main {
		syntax: '<color>';
		inherit: true;
		initial-value: #000;
	}
	@property --_color-main-hover {
		syntax: '<color>';
		inherit: true;
		initial-value: #333;
	}
	@property --_color-on-main-hover {
		syntax: '<color>';
		inherit: true;
		initial-value: #eee;
	}
	--_color-main: var(--_color-base);
	--_color-main-hover: var(--_color-base-hover);
	--_color-on-main-hover: var(--_color-on-base-hover);
}

body {
	@apply overflow-x-clip;
}

.dynamic-grid {
	grid-template-columns: repeat(auto-fit, minmax(var(--grid-min-col-width), 1fr));
}

:is(a, a:visited, .link) {
	color: var(--_link-color);
	cursor: pointer;
	text-decoration: underline;

	&:hover {
		color: var(--_link-color-hover);
	}
}

@tailwind components;

.prose {
	@apply !max-w-none;
}

.accordion-group {
	display: grid;
	border: var(--accordion-border-width) solid var(--_color-main);
	border-radius: var(--accordion-border-radius);
	color: var(--_color-main);
	overflow: hidden;

	/* border between accordions */
	& > * + * {
		border-top: var(--accordion-border-width) solid var(--_color-main);
	}

	&.style-filled,
	&.style-filled > * + * {
		@apply contrast-border-color;
	}
}

.accordion-label {
	display: flex;
	cursor: pointer;
	list-style: none;
	align-items: center;
	justify-content: space-between;
	padding-left: var(--accordion-label-padding-inline);
	padding-right: var(--accordion-label-padding-inline);
	padding-top: var(--accordion-label-padding-block);
	padding-bottom: var(--accordion-label-padding-block);
	color: var(--_color-main);
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 300ms;
	&:hover {
		background-color: var(--_color-on-main-hover);
	}
	&::after {
		content: '';
		width: 1em;
		height: 1em;
		background-color: currentColor;
		mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 20 20'%3E%3Cpath fill='%23000' d='M7.733 4.207a.75.75 0 0 1 1.06.026l5.001 5.25a.75.75 0 0 1 0 1.035l-5 5.25a.75.75 0 1 1-1.087-1.034L12.216 10l-4.51-4.734a.75.75 0 0 1 .027-1.06'/%3E%3C/svg%3E");
		mask-repeat: no-repeat;
		mask-position: center;
		mask-size: contain;
		@apply transition-transform;
	}
	.accordion[open] &::after {
		transform: rotate(90deg);
	}

	.style-filled &,
	&.style-filled {
		/* @apply contrast-color; */
		/* background-color: var(--_color-main); */
		&:hover {
			background-color: var(--_color-main-hover);
		}
	}

	&.style-outlined {
		@apply rounded-[--accordion-border-radius] border-[length:--accordion-border-width] border-solid border-[--_color-main];
		&:hover {
			background-color: var(--_color-on-main-hover);
		}
	}
}

.accordion-content {
	@apply px-[--accordion-content-padding-inline] py-[--accordion-content-padding-block];
}

.button {
	--_button-border-radius: var(--button-border-radius, 0.5em);
	--_button-border-width: var(--button-border-width, 2px);
	--_button-padding-block: var(--button-padding-block, 0.25em);
	--_button-padding-inline: var(--button-padding-inline, 0.75em);
	border-color: var(--_color-main);
	border-radius: var(--_button-border-radius);
	border-width: var(--_button-border-width);
	color: var(--_color-main);
	cursor: pointer;
	/* display: flex; */
	/* align-items: center; */
	padding-block: var(--_button-padding-block);
	padding-inline: var(--_button-padding-inline);
	transition: all 0.3s;
	white-space: nowrap;

	&:not(:disabled):active {
		transform: scale(0.95);
	}

	&,
	&.style-outlined {
		&:hover {
			@apply contrast-color;
			background-color: var(--_color-main);
		}
	}

	&.style-filled {
		background-color: var(--_color-main);
		&:hover {
			background-color: var(--_color-main-hover);
			border-color: var(--_color-main-hover);
		}
	}

	&:disabled,
	&:disabled:hover {
		@apply cursor-not-allowed border-[--_color-disabled] bg-[--_white] text-[--_color-disabled];

		&.style-filled {
			@apply contrast-color bg-[--_color-disabled];
		}
	}
}

/* TODO: Add card-content class */
.card {
	--_card-border-radius: var(--card-border-radius, 0.5rem);
	--_card-border-width: var(--card-border-width, 2px);
	--_card-padding-block: var(--card-padding-block, 1rem);
	--_card-padding-inline: var(--card-padding-inline, 1rem);
	border-color: var(--_color-main);
	border-radius: var(--_card-border-radius);
	border-width: var(--_card-border-width);
	overflow: hidden;
	padding-block: var(--_card-padding-block);
	padding-inline: var(--_card-padding-inline);

	& > .stretch {
		margin-inline: calc(var(--_card-padding-inline) * -1);

		img {
			width: 100%;
		}

		&:first-child {
			margin-top: calc(var(--_card-padding-block) * -1);
		}

		&:last-child {
			margin-bottom: calc(var(--_card-padding-block) * -1);
		}
	}

	& > .no-padding-inline {
		margin-inline: calc(var(--_card-padding-inline) * -1);
	}
	& > .no-padding-left {
		margin-left: calc(var(--_card-padding-inline) * -1);
	}
	& > .no-padding-right {
		margin-right: calc(var(--_card-padding-inline) * -1);
	}
	& > .no-padding-block {
		margin-block: calc(var(--_card-padding-block) * -1);
	}
	& > .no-padding-top {
		margin-top: calc(var(--_card-padding-block) * -1);
	}
	& > .no-padding-bottom {
		margin-bottom: calc(var(--_card-padding-block) * -1);
	}
}

/* Color schemes */
.colors-base {
	--_color-main: var(--_color-base);
	--_color-main-hover: var(--_color-base-hover);
	--_color-on-main-hover: var(--_color-on-base-hover);
}
.colors-primary {
	--_color-main: var(--_color-primary);
	--_color-main-hover: var(--_color-primary-hover);
	--_color-on-main-hover: var(--_color-on-primary-hover);
}
.colors-secondary {
	--_color-main: var(--_color-secondary);
	--_color-main-hover: var(--_color-secondary-hover);
	--_color-on-main-hover: var(--_color-on-secondary-hover);
}
.colors-danger {
	--_color-main: var(--_color-danger);
	--_color-main-hover: var(--_color-danger-hover);
	--_color-on-main-hover: var(--_color-on-danger-hover);
}
.colors-success {
	--_color-main: var(--_color-success);
	--_color-main-hover: var(--_color-success-hover);
	--_color-on-main-hover: var(--_color-on-success-hover);
}
/* END Color Schemes */

/* Styled Variants */

/* From: https://lea.verou.me/blog/2024/contrast-color/ */
.contrast-color {
	/* Fallback for browsers that don't support RCS */
	color: white;
	text-shadow:
		0 0 0.05em black,
		0 0 0.05em black,
		0 0 0.05em black,
		0 0 0.05em black;

	@supports (color: oklch(from red l c h)) {
		--l: clamp(0, (var(--l-threshold, 0.623) / l - 1) * infinity, 1);
		color: oklch(from var(--_color-main) var(--l) 0 h);
		text-shadow: none;
	}

	/* Fallforward for when browsers support contrast-color() */
	@supports (color: contrast-color(red)) {
		color: contrast-color(var(--_color-main));
		text-shadow: none;
	}
}
.contrast-border-color {
	/* Fallback for browsers that don't support RCS */
	color: white;
	text-shadow:
		0 0 0.05em black,
		0 0 0.05em black,
		0 0 0.05em black,
		0 0 0.05em black;

	@supports (color: oklch(from red l c h)) {
		--l: clamp(0, (var(--l-threshold, 0.623) / l - 1) * infinity, 1);
		border-color: oklch(from var(--_color-main) var(--l) 0 h);
		text-shadow: none;
	}

	/* Fallforward for when browsers support contrast-color() */
	@supports (color: contrast-color(red)) {
		border-color: contrast-color(var(--_color-main));
		text-shadow: none;
	}
}

.style-filled,
.style-filled * {
	@apply contrast-color;
	background-color: var(--_color-main);
	border-color: var(--_color-main);
}

.style-outlined {
	border-color: var(--_color-main);
	color: var(--_color-main);
}
/* END Styled Variants */

@tailwind utilities;
