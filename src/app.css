@tailwind base;

:root {
	/* Color constants */
	--black: #262626;
	--white: #ffffff;

	--ehi-neutral-50: #f4f4f4;
	--ehi-neutral-100: #eceded;
	--ehi-neutral-200: #dedede;
	--ehi-neutral-400: #8c8c8c;
	--ehi-neutral-600: #595959;

	--ehi-danger-600: #dc3545;
	--ehi-danger-500: #ec474f;

	--ehi-success-700: #198754;
	--ehi-success-600: #19a061;

	--ehi-blue-50: #eef1f9;
	--ehi-blue-100: #e5eaf6;
	--ehi-blue-500: #0c9deb;
	--ehi-blue-600: #0073ba;
	--ehi-blue-800: #005395;
	--ehi-blue-900: #003270;

	--ehi-gold-300: #f8c74c;
	--ehi-gold-400: #f4af23;

	--ehi-orange-400: #f76736;

	--ehi-mint-50: #f5faf2;
	--ehi-mint-100: #ebf5e6;
	--ehi-mint-300: #addc91;

	--ehi-turquoise-50: #eaf6f5;
	--ehi-turquoise-600: #00a5ab;

	/* Design Intents */

	/* Semantic Colors */

	/* Defaults */
	@property --color-main {
		syntax: '<color>';
		inherit: true;
		initial-value: #000;
	}
	@property --color-main-hover {
		syntax: '<color>';
		inherit: true;
		initial-value: #333;
	}
	@property --color-on-main {
		syntax: '<color>';
		inherit: true;
		initial-value: #fff;
	}
	@property --color-on-main-hover {
		syntax: '<color>';
		inherit: true;
		initial-value: #eee;
	}
	--color-main: var(--color-neutral);
	--color-main-hover: var(--color-neutral-hover);
	--color-on-main: var(--color-on-neutral);
	--color-on-main-hover: var(--color-on-neutral-hover);
	/* --_color-main: var(--color-main, blue); */
	/* --_color-on-main: var(--color-on-main, white); */

	--color-neutral: var(--black, black);
	--color-neutral-hover: color-mix(in srgb, var(--color-neutral) 80%, var(--color-on-neutral));
	--color-on-neutral: var(--white, #fff);
	--color-on-neutral-hover: color-mix(in srgb, var(--color-neutral), var(--color-on-neutral) 95%);

	--color-primary: var(--ehi-blue-600);
	--color-primary-hover: var(
		--ehi-blue-500,
		color-mix(in srgb, var(--color-primary) 90%, var(--color-on-primary))
	);
	--color-on-primary: var(--white);
	--color-on-primary-hover: color-mix(in srgb, var(--color-primary), var(--color-on-primary) 95%);

	--color-secondary: var(--ehi-gold-400);
	--color-secondary-hover: var(
		--ehi-gold-300,
		color-mix(in srgb, var(--color-secondary) 90%, var(--color-on-secondary))
	);
	--color-on-secondary: var(--white);
	--color-on-secondary-hover: color-mix(
		in srgb,
		var(--color-secondary),
		var(--color-on-secondary) 95%
	);

	--color-danger: var(--ehi-danger-600, red);
	--color-danger-hover: var(
		--ehi-danger-400,
		color-mix(in srgb, var(--color-danger) 80%, var(--black))
	);
	--color-on-danger: var(--white, #fff);
	--color-on-danger-hover: color-mix(in srgb, var(--color-danger), var(--color-on-danger) 95%);

	--color-success: var(--ehi-success-700, green);
	--color-success-hover: var(
		--ehi-success-600,
		color-mix(in srgb, var(--color-success) 90%, var(--color-on-success))
	);
	--color-on-success: var(--white, #fff);
	--color-on-success-hover: color-mix(in srgb, var(--color-success), var(--color-on-success) 95%);

	--link-color: var(--ehi-blue-600, #0000ee);
	--link-color-hover: var(
		--ehi-blue-500,
		color-mix(in srgb, var(--link-color) 90%, var(--color-on-main))
	);

	--accordion-border-radius: var(--gap-xs, 0px);
	--accordion-border-width: 1px;
	--accordion-label-padding-block: var(--gap-md, 1rem);
	--accordion-label-padding-inline: var(--gap-md, 1rem);
	--accordion-content-padding-block: var(--gap-md, 1rem);
	--accordion-content-padding-inline: var(--gap-md, 1rem);

	--button-border-radius: var(--gap-xxs-relative);
	--button-border-width: 2px;
	--button-padding-block: var(--gap-xxs-relative);
	--button-padding-inline: var(--gap-sm-relative);
	/* --_border-radius: var(--border-radius, 0px); */
	/* --_border-width: var(--border-width, 1px); */

	/* --card-border-radius: 0px; */
	--card-border-radius: var(--gap-xs);
	--card-border-width: 2px;
	--card-padding-block: var(--gap-md);
	--card-padding-inline: var(--gap-md);

	--grid-min-col-width: 20rem;

	/* END Design Intents */

	--font-base: 1rem;
	--leading-base: 1.5rem;
	--font-lg: 1.125rem;
	--leading-lg: 1.625rem;
	--font-xl: 1.375rem;
	--leading-xl: 1.875rem;
	--font-2xl: 1.625rem;
	--leading-2xl: 2rem;
	--font-3xl: 2.125rem;
	--leading-3xl: 2.25rem;
	--font-4xl: 3.438rem;
	--leading-4xl: 4.063rem;

	/* Spacing */
	/* fixed values - not affected by --gap-unit or --text-base-size */
	--gap-unit: 1rem;
	--gap-xxs: calc(0.25 * var(--gap-unit));
	--gap-xs: calc(0.5 * var(--gap-unit));
	--gap-sm: calc(0.75 * var(--gap-unit));
	--gap-md: calc(1.25 * var(--gap-unit));
	--gap-lg: calc(2 * var(--gap-unit));
	--gap-xl: calc(3.25 * var(--gap-unit));
	--gap-xxl: calc(5.25 * var(--gap-unit));

	/* relative values */
	--gap-unit-relative: 1em;
	--gap-xxs-relative: calc(0.25 * var(--gap-unit-relative));
	--gap-xs-relative: calc(0.5 * var(--gap-unit-relative));
	--gap-sm-relative: calc(0.75 * var(--gap-unit-relative));
	--gap-md-relative: calc(1.25 * var(--gap-unit-relative));
	--gap-lg-relative: calc(2 * var(--gap-unit-relative));
	--gap-xl-relative: calc(3.25 * var(--gap-unit-relative));
	--gap-xxl-relative: calc(5.25 * var(--gap-unit-relative));
}

body {
	@apply overflow-x-clip;
}

.dynamic-grid {
	grid-template-columns: repeat(auto-fit, minmax(var(--grid-min-col-width), 1fr));
}

:is(a, a:visited, .link) {
	color: var(--link-color);
	cursor: pointer;
	text-decoration: underline;

	&:hover {
		color: var(--link-color-hover);
	}
}

@tailwind components;

.prose {
	@apply !max-w-none;
}

.accordion-group {
	display: grid;
	background-color: var(--color-on-main);
	border: var(--accordion-border-width) solid var(--color-main);
	border-radius: var(--accordion-border-radius);
	color: var(--color-main);
	overflow: hidden;

	/* border between accordions */
	& > * + * {
		border-top: var(--accordion-border-width) solid var(--color-main);
	}

	&.variant-filled,
	&.variant-filled > * + * {
		border-color: var(--color-on-main);
	}
}

.accordion-label {
	display: flex;
	cursor: pointer;
	list-style: none;
	align-items: center;
	justify-content: space-between;
	background-color: var(--color-on-main);
	padding-left: var(--accordion-label-padding-inline);
	padding-right: var(--accordion-label-padding-inline);
	padding-top: var(--accordion-label-padding-block);
	padding-bottom: var(--accordion-label-padding-block);
	color: var(--color-main);
	transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 300ms;
	&:hover {
		background-color: var(--color-on-main-hover);
	}
	&::after {
		content: '';
		width: 1em;
		height: 1em;
		background-color: currentColor;
		mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 20 20'%3E%3Cpath fill='%23000' d='M7.733 4.207a.75.75 0 0 1 1.06.026l5.001 5.25a.75.75 0 0 1 0 1.035l-5 5.25a.75.75 0 1 1-1.087-1.034L12.216 10l-4.51-4.734a.75.75 0 0 1 .027-1.06'/%3E%3C/svg%3E");
		mask-repeat: no-repeat;
		mask-position: center;
		mask-size: contain;
		@apply transition-transform;
	}
	.accordion[open] &::after {
		transform: rotate(90deg);
	}

	.variant-filled &,
	&.variant-filled {
		@apply bg-[--color-main] text-[--color-on-main];
		&:hover {
			background-color: var(--color-main-hover);
		}
	}

	&.variant-outlined {
		@apply rounded-[--accordion-border-radius] border-[length:--accordion-border-width] border-solid border-[--color-main];
		&:hover {
			background-color: var(--color-on-main-hover);
		}
	}
}

.accordion-content {
	@apply px-[--accordion-content-padding-inline] py-[--accordion-content-padding-block];

	.variant-filled &,
	&.variant-filled {
		background-color: var(--color-main);
		color: var(--color-on-main);
	}
	/* &.variant-filled,
	.variant-filled & {
		background-color: var(--color-main);
		color: var(--color-on-main);
	} */
}

.button {
	background-color: var(--color-on-main);
	border-color: var(--color-main);
	border-radius: var(--button-border-radius);
	border-width: var(--button-border-width);
	color: var(--color-main);
	cursor: pointer;
	/* display: flex; */
	/* align-items: center; */
	padding-block: var(--button-padding-block);
	padding-inline: var(--button-padding-inline);
	transition: all 0.3s;
	white-space: nowrap;

	&,
	&.variant-outlined {
		/* color: var(--color-main); */
		&:hover {
			background-color: var(--color-main);
			color: var(--color-on-main);
		}
	}

	&.variant-filled {
		background-color: var(--color-main);
		&:hover {
			background-color: var(--color-main-hover);
			border-color: var(--color-main-hover);
		}
	}

	&:disabled {
		@apply cursor-not-allowed border-gray-300 bg-gray-100 text-gray-300;
	}
}

/* TODO: Add card-content class */
.card {
	border-color: var(--color-main);
	border-radius: var(--card-border-radius);
	border-width: var(--card-border-width);
	overflow: hidden;
	padding-block: var(--card-padding-block);
	padding-inline: var(--card-padding-inline);

	& > .stretch {
		margin-inline: calc(var(--card-padding-inline) * -1);

		img {
			width: 100%;
		}

		&:first-child {
			margin-top: calc(var(--card-padding-block) * -1);
		}

		&:last-child {
			margin-bottom: calc(var(--card-padding-block) * -1);
		}
	}

	& > .no-padding-inline {
		margin-inline: calc(var(--card-padding-inline) * -1);
	}
	& > .no-padding-left {
		margin-left: calc(var(--card-padding-inline) * -1);
	}
	& > .no-padding-right {
		margin-right: calc(var(--card-padding-inline) * -1);
	}
	& > .no-padding-block {
		margin-block: calc(var(--card-padding-block) * -1);
	}
	& > .no-padding-top {
		margin-top: calc(var(--card-padding-block) * -1);
	}
	& > .no-padding-bottom {
		margin-bottom: calc(var(--card-padding-block) * -1);
	}
}

/* Color schemes */
.neutral {
	--color-main: var(--color-neutral);
	--color-main-hover: var(--color-neutral-hover);
	--color-on-main: var(--color-on-neutral);
	--color-on-main-hover: var(--color-on-neutral-hover);
}
.primary {
	--color-main: var(--color-primary);
	--color-main-hover: var(--color-primary-hover);
	--color-on-main: var(--color-on-primary);
	--color-on-main-hover: var(--color-on-primary-hover);
}
.secondary {
	--color-main: var(--color-secondary);
	--color-main-hover: var(--color-secondary-hover);
	--color-on-main: var(--color-on-secondary);
	--color-on-main-hover: var(--color-on-secondary-hover);
}
.danger {
	--color-main: var(--color-danger);
	--color-main-hover: var(--color-danger-hover);
	--color-on-main: var(--color-on-danger);
	--color-on-main-hover: var(--color-on-danger-hover);
}
.success {
	--color-main: var(--color-success);
	--color-main-hover: var(--color-success-hover);
	--color-on-main: var(--color-on-success);
	--color-on-main-hover: var(--color-on-success-hover);
}
/* END Color Schemes */

/* Styled Variants */
.variant-filled {
	background-color: var(--color-main);
	color: var(--color-on-main);
}

.variant-outlined {
	background-color: var(--color-on-main);
	border-color: var(--color-main);
	color: var(--color-main);
}
/* END Styled Variants */

@tailwind utilities;
